// -----------------------------------------------------------------------------
// This file contains very basic styles.
// -----------------------------------------------------------------------------

/**
 * Set up a decent box model on the root element
 */
html {
  box-sizing: border-box;
}

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*,
*::before,
*::after {
  box-sizing: inherit;
}

/**
 * Basic styles for links
 */
html,
body {
  height: 100%;
  min-height: 100%;
}
body{
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;

  //opacity: 0;
  //transition: .1s opacity ease-in-out;
  //&.active{
  //  opacity: 1;
  //}
}
button,
input,
select,
textarea {
  color: $text-color;
  font-family: $font-basic;
  font-size: 18px;
  border: 0;
  border-radius: 0;
  outline: none;
}
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
}
input[type='number'] {
  -moz-appearance: textfield;
}
label{
  margin-bottom: 0;
}
ul {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

ol {
  list-style-type: none;
  counter-reset: item;
  margin: 0 0 30px;
  padding: 0;
  font-family: $font-add;
  font-weight: normal;
  font-size: 16px;
  line-height: 1.6;
  & > li {
    counter-increment: item;
    margin-bottom: 20px;
    position: relative;
    padding-left: 50px;
    &:before {
      content: counters(item, ".");
      color: $color;
      font-family: $font-add;
      font-weight: bold;
      border: 1px solid rgba(139, 160, 179, 0.6);
      border-radius: 50%;
      font-size: 22px;
      position: absolute;
      left: 0;
      top: -4px;
      width: 34px;
      height: 34px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
  li {
    ol {
      & > li {
        margin: 0;
        &:before {
          :before {
            content: counters(item, ".") " ";
          }
        }
      }
    }
  }

}

a {
  outline: none;
  transition: .2s ease-in-out color, .2s ease-in-out text-decoration,  .2s ease-in-out opacity;
  color: $color;
  font-weight: bold;
  text-decoration: underline;
  &:hover {
    color: $color;
    opacity: .75;
    text-decoration-color: transparent;
  }
}

img::selection{
  background: transparent;
}
img::-moz-selection{
  background: transparent;
}

input::-webkit-input-placeholder {
  color: rgba(0, 0, 0, 0.7);
  transition: opacity 0.3s ease;
}
input::-moz-placeholder {
  color: rgba(0, 0, 0, 0.7);
  transition: opacity 0.3s ease;
}
input:-moz-placeholder {
  color: rgba(0, 0, 0, 0.7);
  transition: opacity 0.3s ease;
}
input:-ms-input-placeholder {
  color: rgba(0, 0, 0, 0.7);
  transition: opacity 0.3s ease;
}
input:focus::-webkit-input-placeholder {
  opacity: 0;
  transition: opacity 0.3s ease;
}
input:focus::-moz-placeholder {
  opacity: 0;
  transition: opacity 0.3s ease;
}
input:focus:-moz-placeholder {
  opacity: 0;
  transition: opacity 0.3s ease;
}
input:focus:-ms-input-placeholder {
  opacity: 0;
  transition: opacity 0.3s ease;
}


textarea::-webkit-input-placeholder {
  color: rgba(0, 0, 0, 0.45);
  transition: opacity 0.3s ease;
}
textarea::-moz-placeholder {
  color: rgba(0, 0, 0, 0.45);
  transition: opacity 0.3s ease;
}
textarea:-moz-placeholder {
  color: rgba(0, 0, 0, 0.45);
  transition: opacity 0.3s ease;
}
textarea:-ms-input-placeholder {
  color: rgba(0, 0, 0, 0.45);
  transition: opacity 0.3s ease;
}
textarea:focus::-webkit-input-placeholder {
  opacity: 0;
  transition: opacity 0.3s ease;
}
textarea:focus::-moz-placeholder {
  opacity: 0;
  transition: opacity 0.3s ease;
}
textarea:focus:-moz-placeholder {
  opacity: 0;
  transition: opacity 0.3s ease;
}
textarea:focus:-ms-input-placeholder {
  opacity: 0;
  transition: opacity 0.3s ease;
}


@media (max-width: $md) {
    ol{
      font-size: 14px;
    }
}